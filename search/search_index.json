{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TP_FINAL_TCP_IP_2025_Grupo_2","text":""},{"location":"#integrantes","title":"Integrantes","text":"<ul> <li>Coassolo, Santiago \ud83d\udc10  </li> <li>Laborda, Sebastian \ud83d\udc10  </li> <li>Lambrese, Martin \ud83d\udc10  </li> <li>Milanesio, Valentin \ud83d\udc10  </li> <li>Novisardi, Maximiliano \ud83d\udc10  </li> <li>Magallanes, Manuel \ud83d\udc10  </li> <li>Tizzian, Ramiro \ud83d\udc10  </li> </ul>"},{"location":"#logo-del-proyecto","title":"Logo del Proyecto","text":""},{"location":"Diagrama/","title":"Diagrama del Sistema","text":"<p>A continuaci\u00f3n se presenta el diagrama general del sistema a desplegar. Este diagrama ilustra la arquitectura y los principales componentes involucrados en la soluci\u00f3n de monitoreo basada en TCP/IP.</p> <p></p>"},{"location":"Parcial_Integrador_Tema_2/","title":"Aplicaciones TCP/IP 2025","text":""},{"location":"Parcial_Integrador_Tema_2/#parcial-practico-integrador","title":"Parcial Pr\u00e1ctico Integrador","text":""},{"location":"Parcial_Integrador_Tema_2/#tema-2","title":"Tema 2","text":""},{"location":"Parcial_Integrador_Tema_2/#objetivo","title":"Objetivo","text":"<p>Desarrollar una soluci\u00f3n tecnol\u00f3gica al problema planteado aplicando lo aprendido durante el cursado de la materia y siguiendo el proceso estudiado de la ingenier\u00eda del software.  </p> <p>Deadline: 17/06/2023  </p>"},{"location":"Parcial_Integrador_Tema_2/#enunciado","title":"Enunciado","text":"<p>El Instituto de Protecciones de Sistemas El\u00e9ctricos de Potencia (IPSEP), dependiente de la Facultad de Ingenier\u00eda de la Universidad Nacional de R\u00edo Cuarto, lo ha contratado para desarrollar una aplicaci\u00f3n de monitoreo para reconectador autom\u00e1tico OSM27 de la marca NOJA Power.  </p> <p>El Instituto considera que, a trav\u00e9s de este desarrollo, ser\u00e1 posible lograr una mejora sustancial en la operaci\u00f3n del equipamiento, puntualmente sobre el monitoreo, as\u00ed como tambi\u00e9n recopilar datos hist\u00f3ricos que permitan optimizar la toma de decisiones y mejorar el control de la calidad de la energ\u00eda en el campus de la UNRC.  </p> <p>Para las comunicaciones se propone utilizar el protocolo Modbus-TCP, y desarrollar una aplicaci\u00f3n de monitoreo, preferentemente web (a definir en reuniones de relevamiento con los usuarios). Adem\u00e1s, se deber\u00e1 contemplar la posibilidad de almacenar las mediciones en una base de datos para su posterior an\u00e1lisis.  </p>"},{"location":"Parcial_Integrador_Tema_2/#_1","title":"Parcial Integrador","text":"<p>(Imagen referencial del proyecto)</p>"},{"location":"Parcial_Integrador_Tema_2/#consigna","title":"Consigna","text":"<p>Llevar adelante el desarrollo del sistema en el marco del proceso de desarrollo de software seg\u00fan el SWEBOK de la IEEE (Versi\u00f3n 3.0). Se debe entregar la documentaci\u00f3n completa y presentar un demostrador tecnol\u00f3gico de la soluci\u00f3n planteada.  </p>"},{"location":"Parcial_Integrador_Tema_2/#grupo-e-integrantes","title":"Grupo e Integrantes","text":"Integrante Milanesio, Valent\u00edn Coassolo, Santiago Novisardi, Maximiliano Magallanes, Manuel Laborda, Sebasti\u00e1n Lambrese, Mart\u00edn Tisiani, Ramiro"},{"location":"Parcial_Integrador_Tema_2/#documentacion-a-entregar","title":"Documentaci\u00f3n a Entregar","text":"<ul> <li>Requerimientos  </li> <li>Dise\u00f1o  </li> <li>Implementaci\u00f3n  </li> <li>Pruebas  </li> </ul>"},{"location":"Parcial_Integrador_Tema_2/#demostrador-tecnologico","title":"Demostrador Tecnol\u00f3gico","text":"<p>Se deber\u00e1 presentar una instancia funcional del sistema como prueba de concepto.</p>"},{"location":"Preguntas_Cliente/","title":"Preguntas para el Cliente","text":"<p>A continuaci\u00f3n se presenta un listado de preguntas clave para comprender en profundidad los requerimientos y expectativas del cliente respecto al proyecto:</p> <ol> <li>\u00bfCu\u00e1l es el objetivo principal del producto?</li> <li>\u00bfQu\u00e9 funcionalidades debe tener el producto final?</li> <li>\u00bfQu\u00e9 funcionalidades considera imprescindibles y cu\u00e1les \u201cdeseables\u201d?</li> <li>\u00bfHay alguna tecnolog\u00eda, herramienta o lenguaje que prefieran utilizar?</li> <li>\u00bfQui\u00e9nes ser\u00e1n los usuarios del producto o servicio?</li> </ol> <p>Nota: Estas preguntas buscan asegurar una comunicaci\u00f3n clara y efectiva, permitiendo definir correctamente el alcance y las prioridades del proyecto.</p>"},{"location":"Requerimientos/","title":"Informe de Requerimientos","text":"<p>Proyecto: Sistema de Monitoreo para Reconectador Autom\u00e1tico NOJA Power Cliente: IPSEP (Juan Carlos Amati) Fecha: 26/05 Equipo: F3</p>"},{"location":"Requerimientos/#1-introduccion","title":"1. Introducci\u00f3n","text":"<p>Este informe documenta los requerimientos del sistema a desarrollar para el monitoreo de un reconectador autom\u00e1tico OSM27 de la marca NOJA Power, seg\u00fan lo relevado con el cliente. El objetivo es establecer los lineamientos funcionales y no funcionales para asegurar que el sistema cumpla con las necesidades operativas de monitoreo y an\u00e1lisis de datos el\u00e9ctricos en tiempo real y de forma remota.</p>"},{"location":"Requerimientos/#2-descripcion-general","title":"2. Descripci\u00f3n general","text":"<p>El cliente requiere un sistema que permita obtener, almacenar y visualizar informaci\u00f3n cr\u00edtica del reconectador autom\u00e1tico, con el fin de realizar un monitoreo continuo del estado de la red el\u00e9ctrica. La informaci\u00f3n debe ser accesible de forma remota desde una PC ubicada en las instalaciones del IPSEP, mediante conexi\u00f3n por cable Ethernet al dispositivo NOJA Power.</p> <p>El sistema tomar\u00e1 mediciones cada 15 minutos y guardar\u00e1 los datos preferentemente en un archivo CSV. Adem\u00e1s, se solicitaron funcionalidades adicionales que mejoren la experiencia del usuario y la disponibilidad del sistema.</p>"},{"location":"Requerimientos/#3-requerimientos-funcionales","title":"3. Requerimientos funcionales","text":"<p>A continuaci\u00f3n, se enumeran los requerimientos funcionales expresados por el cliente:</p> <ol> <li> <p>Obtener y registrar las siguientes variables el\u00e9ctricas del reconectador:</p> <ul> <li>Las tres tensiones.</li> <li>Las tres corrientes.</li> <li>Potencia activa.</li> <li>Potencia reactiva.</li> <li>Factor de potencia.</li> <li>Eventos (reconexiones).</li> </ul> </li> <li> <p>Guardar la informaci\u00f3n registrada en archivos CSV.</p> </li> <li>Registrar los datos con una periodicidad de 15 minutos.</li> <li>Permitir el acceso remoto al sistema desde una PC ubicada en el IPSEP.</li> <li>Establecer la conexi\u00f3n con el reconectador NOJA Power mediante cable Ethernet.</li> </ol>"},{"location":"Requerimientos/#4-requerimientos-no-funcionales","title":"4. Requerimientos no funcionales","text":"<ul> <li>El sistema debe estar disponible en todo momento (alta disponibilidad).</li> <li>La interfaz de usuario debe ser intuitiva y de f\u00e1cil acceso.</li> <li>Se debe garantizar la integridad y seguridad de los datos registrados.</li> </ul>"},{"location":"Requerimientos/#5-requerimientos-deseables","title":"5. Requerimientos deseables","text":"<p>Adem\u00e1s de los requerimientos fundamentales, el cliente manifest\u00f3 inter\u00e9s en que el sistema cuente con las siguientes caracter\u00edsticas deseables:</p> <ul> <li>Env\u00edo de alertas por correo electr\u00f3nico ante eventos importantes.</li> <li>Visualizaci\u00f3n de gr\u00e1ficas en funci\u00f3n del tiempo.</li> <li>Acceso a la plataforma desde cualquier lugar de la universidad, facilitando el monitoreo remoto.</li> <li>Realizar una interfaz estilo p\u00e1gina web.</li> </ul>"},{"location":"Requerimientos/#6-conclusion","title":"6. Conclusi\u00f3n","text":"<p>Este documento resume los requerimientos funcionales y no funcionales identificados durante el relevamiento con el cliente. Servir\u00e1 como gu\u00eda para la etapa de dise\u00f1o e implementaci\u00f3n del sistema. Una vez validado por el cliente, se considerar\u00e1 como base contractual del proyecto.</p>"},{"location":"client_modbusTCP/","title":"Documentaci\u00f3n de la carpeta <code>client_modbusTCP</code>","text":"<p>Esta carpeta contiene el cliente Modbus TCP encargado de leer datos de un servidor Modbus (por ejemplo, un recloser simulado) y almacenar los datos en una base de datos InfluxDB. El flujo principal es: consulta peri\u00f3dica de registros anal\u00f3gicos y eventos, y almacenamiento en InfluxDB.</p>"},{"location":"client_modbusTCP/#estructura-de-archivos","title":"Estructura de archivos","text":"<pre><code>client_modbusTCP/\n\u251c\u2500\u2500 client.py\n\u251c\u2500\u2500 requirements.txt\n</code></pre>"},{"location":"client_modbusTCP/#1-clientpy","title":"1. <code>client.py</code>","text":"<p>Este es el script principal del cliente Modbus TCP. Se conecta a un servidor Modbus, lee registros anal\u00f3gicos y eventos, y almacena los resultados en InfluxDB.</p> <p>\u00bfQu\u00e9 hace cada secci\u00f3n? - Configura la conexi\u00f3n a Modbus TCP y a InfluxDB. - Define los registros anal\u00f3gicos y eventos a consultar. - Lee peri\u00f3dicamente los valores y detecta cambios de eventos. - Guarda los datos en InfluxDB, incluyendo los eventos como texto. - Permite la finalizaci\u00f3n segura con Ctrl+C.</p> <p>Contenido del archivo:</p> <pre><code>from pymodbus.client import ModbusTcpClient\nfrom influxdb_client import InfluxDBClient, Point\nfrom influxdb_client.client.write_api import SYNCHRONOUS\nimport time\n\nMODBUS_HOST = \"127.0.0.1\"\nMODBUS_PORT = 5020\n\nINFLUXDB_URL = \"http://localhost:8086\"\nINFLUXDB_TOKEN = \"9b87FS8_-PvJYOYfVlU5-7MF6Oes9jhgFWitRcZp7-efOsaI3tMLoshBGdAQM_m-akDeE7fd1IoRNl8-aOzQwg==\"\nINFLUXDB_ORG = \"Fila3\"\nINFLUXDB_BUCKET = \"Fila3\"\n\ninput_registers = [\n    (\"Ia\", 0), (\"Ib\", 1), (\"Ic\", 2),\n    (\"Ua\", 4), (\"Ub\", 5), (\"Uc\", 6),\n    (\"Ur\", 7), (\"Us\", 8), (\"Ut\", 9),\n    (\"Uab\", 10), (\"Ubc\", 11), (\"Uca\", 12),\n    (\"Urs\", 13), (\"Ust\", 14), (\"Utr\", 15),\n    (\"KVA_A\", 16), (\"KVA_B\", 17), (\"KVA_C\", 18),\n    (\"KW_A\", 19), (\"KW_B\", 20), (\"KW_C\", 21),\n    (\"KVAr_A\", 22), (\"KVAr_B\", 23), (\"KVAr_C\", 24),\n    (\"KVA_total\", 25), (\"KVAr_total\", 26), (\"KW_total\", 27),\n    (\"Freq_abc\", 60), (\"Freq_rst\", 61),\n    (\"FP_total\", 67), (\"FP_A\", 68), (\"FP_B\", 69), (\"FP_C\", 70),\n]\n\n# Mapeo de direcciones booleanas a nombres t\u00e9cnicos\ndiscrete_inputs = {\n    3: \"AR initiated\",\n    43: \"Open (EF1+)\",\n    50: \"Open (UF)\",\n    55: \"Open (Local)\",\n    59: \"Alarm\",\n    63: \"Malfunction\",\n    75: \"Closed (AR)\",\n    100: \"Excessive Too\",\n    105: \"Excessive Tcc\",\n    106: \"SIM Module Fault\",\n}\n\n# Mapeo de direcciones a descripciones legibles\ndescripciones_eventos = {\n    3: \"Se inici\u00f3 un ciclo de reconexi\u00f3n autom\u00e1tica\",\n    43: \"Apertura por falla a tierra positiva\",\n    50: \"Apertura por baja frecuencia\",\n    55: \"Apertura manual o por panel\",\n    59: \"Alarma de protecci\u00f3n activa\",\n    63: \"Error general detectado en el recloser\",\n    75: \"Cerrado por acci\u00f3n de reconexi\u00f3n autom\u00e1tica (AR)\",\n    100: \"Tiempo de apertura excedido\",\n    105: \"Tiempo de cierre excedido\",\n    106: \"Falla en el m\u00f3dulo SIM\",\n}\n\ndef guardar_en_influxdb(write_api, analogos, eventos):\n    point = Point(\"mediciones_recloser\")\n\n    # Campos anal\u00f3gicos\n    for nombre, valor in analogos.items():\n        if nombre.startswith(\"Freq\") or nombre.startswith(\"FP\"):\n            valor = valor / 100.0\n        point.field(nombre, valor)\n\n    # Campo eventos como string\n    if eventos:\n        eventos_str = \", \".join(eventos)\n        point.field(\"eventos\", eventos_str)\n\n    write_api.write(bucket=INFLUXDB_BUCKET, record=point)\n\ndef main():\n    client = ModbusTcpClient(MODBUS_HOST, port=MODBUS_PORT)\n    influx_client = InfluxDBClient(url=INFLUXDB_URL, token=INFLUXDB_TOKEN, org=INFLUXDB_ORG)\n    write_api = influx_client.write_api(write_options=SYNCHRONOUS)\n\n    if not client.connect():\n        print(\"No se pudo conectar al servidor Modbus.\")\n        return\n\n    estados_anteriores = {offset: None for offset in discrete_inputs}\n\n    try:\n        while True:\n            analogos = {}\n            eventos = []\n            print(\"\\n--- Consulta de registros ---\")\n\n            # Lectura de registros anal\u00f3gicos\n            for nombre, offset in input_registers:\n                result = client.read_input_registers(offset, count=1)\n                if result.isError():\n                    print(f\"[ERROR] {nombre} (30000+{offset}): {result}\")\n                else:\n                    valor = result.registers[0]\n                    analogos[nombre] = valor\n                    print(f\"{nombre} = {valor}\")\n\n            # Lectura de eventos\n            for offset, nombre_tecnico in discrete_inputs.items():\n                result = client.read_discrete_inputs(offset, count=1)\n                if result.isError():\n                    print(f\"[ERROR] {nombre_tecnico} (10000+{offset}): {result}\")\n                else:\n                    estado = result.bits[0]\n                    estado_anterior = estados_anteriores[offset]\n\n                    if estado_anterior is None:\n                        estados_anteriores[offset] = estado\n                    elif estado != estado_anterior:\n                        descripcion = descripciones_eventos.get(offset, nombre_tecnico)\n                        eventos.append(descripcion)\n                        estados_anteriores[offset] = estado\n\n                    print(f\"{nombre_tecnico} = {'ON' if estado else 'OFF'}\")\n\n            guardar_en_influxdb(write_api, analogos, eventos)\n            if eventos:\n                print(f\"Eventos detectados y guardados: {', '.join(eventos)}\")\n            else:\n                print(\"No hubo eventos nuevos.\")\n\n            time.sleep(15)\n\n    except KeyboardInterrupt:\n        print(\"Finalizando cliente Modbus.\")\n    finally:\n        client.close()\n        influx_client.close()\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"client_modbusTCP/#2-requirementstxt","title":"2. <code>requirements.txt</code>","text":"<p>Este archivo lista las dependencias de Python necesarias para ejecutar el cliente.</p> <p>Contenido del archivo:</p> <pre><code>pymodbus\ninfluxdb-client==1.38.0\n</code></pre>"},{"location":"client_modbusTCP/#comandos-utiles","title":"Comandos \u00fatiles","text":"<p>Instalar dependencias:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Ejecutar el cliente:</p> <pre><code>python client.py\n</code></pre>"},{"location":"conclusion/","title":"Conclusi\u00f3n","text":"<p>Se lograron cumplir todos los requerimientos acordados con el cliente, desarrollando un sistema completo de monitoreo, almacenamiento y visualizaci\u00f3n de datos para el reconectador NOJA Power. El sistema implementa todas las funcionalidades solicitadas, incluyendo la adquisici\u00f3n de variables el\u00e9ctricas, el registro de eventos, la visualizaci\u00f3n web y la exportaci\u00f3n de datos.</p> <p>La \u00fanica dificultad encontrada fue que el equipo f\u00edsico no soporta el protocolo Modbus sobre TCP, lo que impidi\u00f3 la integraci\u00f3n directa con el hardware. Por este motivo, se recomienda continuar explorando alternativas de implementaci\u00f3n para lograr la comunicaci\u00f3n efectiva con el reconectador.</p> <p>Todo el desarrollo, documentaci\u00f3n y c\u00f3digo fuente del proyecto se encuentra disponible en el siguiente repositorio de GitHub:</p> <p>https://github.com/danunziata/TP_FINAL-TCP_IP_2025-Grupo_2.git</p>"},{"location":"database_influxDB/","title":"Documentaci\u00f3n de la carpeta <code>database_InfluxDB</code>","text":"<p>Esta carpeta contiene la configuraci\u00f3n y los archivos necesarios para desplegar y utilizar una base de datos InfluxDB, tanto en forma local (instalaci\u00f3n manual) como en contenedores Docker.</p>"},{"location":"database_influxDB/#estructura-de-archivos","title":"Estructura de archivos","text":"<pre><code>database_InfluxDB/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 data/\n    \u2514\u2500\u2500 influxdb/\n        \u251c\u2500\u2500 influxd.sqlite\n        \u2514\u2500\u2500 engine/\n</code></pre>"},{"location":"database_influxDB/#1-docker-composeyaml","title":"1. <code>docker-compose.yaml</code>","text":"<p>Este archivo permite desplegar InfluxDB f\u00e1cilmente usando Docker Compose. Define el servicio, el volumen persistente y las variables de entorno para la inicializaci\u00f3n autom\u00e1tica.</p> <p>\u00bfQu\u00e9 hace cada secci\u00f3n? - Usa la imagen oficial <code>influxdb:2.7</code>. - Expone el puerto 8086 (web y API de InfluxDB). - Monta un volumen persistente para los datos. - Inicializa usuario, organizaci\u00f3n, bucket y token de admin autom\u00e1ticamente.</p> <p>Contenido del archivo:</p> <pre><code>services:\n  influxdb:\n    image: influxdb:2.7\n    container_name: influxdb\n    ports:\n      - \"8086:8086\"\n    volumes:\n      - influxdb_data:/var/lib/influxdb2\n    environment:\n      - DOCKER_INFLUXDB_INIT_MODE=setup\n      - DOCKER_INFLUXDB_INIT_USERNAME=Reconectador\n      - DOCKER_INFLUXDB_INIT_PASSWORD=Capo1234\n      - DOCKER_INFLUXDB_INIT_ORG=Fila3\n      - DOCKER_INFLUXDB_INIT_BUCKET=Fila3\n      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=9b87FS8_-PvJYOYfVlU5-7MF6Oes9jhgFWitRcZp7-efOsaI3tMLoshBGdAQM_m-akDeE7fd1IoRNl8-aOzQwg==\n\nvolumes:\n  influxdb_data:\n    name: influxdb_data\n</code></pre>"},{"location":"database_influxDB/#2-carpeta-datainfluxdb","title":"2. Carpeta <code>data/influxdb/</code>","text":"<p>Esta carpeta almacena los datos persistentes de la base de datos InfluxDB cuando se utiliza Docker. No es necesario modificar su contenido manualmente.</p> <ul> <li><code>influxd.sqlite</code>: Archivo principal de la base de datos.</li> <li><code>engine/</code>: Carpeta interna utilizada por InfluxDB para el almacenamiento eficiente de datos.</li> </ul>"},{"location":"database_influxDB/#3-comandos-para-dejar-influxdb-funcionando","title":"3. Comandos para dejar InfluxDB funcionando","text":"<p>A continuaci\u00f3n se muestran los comandos necesarios para levantar la base de datos InfluxDB usando Docker Compose y acceder a la interfaz web:</p> <p>Levantar el servicio por primera vez:</p> <pre><code>docker compose up -d\n</code></pre> <p>Ver logs del contenedor:</p> <pre><code>docker compose logs -f\n</code></pre> <p>Detener el servicio:</p> <pre><code>docker compose down\n</code></pre> <p>Acceder a la interfaz web:</p> <p>Abre tu navegador en:</p> <pre><code>http://localhost:8086\n</code></pre> <p>Desde ah\u00ed podr\u00e1s gestionar la base de datos.</p>"},{"location":"server_modbusTCP/","title":"Servidor Modbus TCP","text":""},{"location":"server_modbusTCP/#documentacion-de-la-carpeta-server_modbustcp","title":"Documentaci\u00f3n de la carpeta <code>server_modbusTCP</code>","text":"<p>Esta carpeta contiene un simulador de servidor Modbus TCP, utilizado para pruebas y desarrollo de sistemas de monitoreo el\u00e9ctrico. El servidor simula variables anal\u00f3gicas y eventos, y expone los datos a trav\u00e9s del protocolo Modbus TCP.</p>"},{"location":"server_modbusTCP/#estructura-de-archivos","title":"Estructura de archivos","text":"<pre><code>server_modbusTCP/\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docker-compose.yaml\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 server.py\n</code></pre>"},{"location":"server_modbusTCP/#requisitos","title":"Requisitos","text":"<ul> <li>Docker</li> <li>Docker Compose</li> </ul>"},{"location":"server_modbusTCP/#1-dockerfile","title":"1. <code>Dockerfile</code>","text":"<p>El archivo <code>Dockerfile</code> define c\u00f3mo construir la imagen Docker para el servidor Modbus TCP. Utiliza una imagen base de Python, instala las dependencias necesarias, copia los archivos del proyecto y expone el puerto 5020. Al iniciar el contenedor, ejecuta autom\u00e1ticamente el servidor Modbus TCP.</p> <p>\u00bfQu\u00e9 hace cada secci\u00f3n? - Usa la imagen oficial <code>python:3.11-slim</code> para asegurar un entorno ligero y compatible. - Define <code>/app</code> como directorio de trabajo dentro del contenedor. - Copia el archivo <code>requirements.txt</code> e instala las dependencias (en este caso, <code>pymodbus</code>). - Copia el resto de los archivos del proyecto al contenedor. - Expone el puerto 5020 para conexiones Modbus TCP. - Define el comando por defecto para ejecutar el servidor (<code>python server.py</code>).</p> <p>Contenido del archivo:</p> <pre><code># Usamos una imagen base oficial de Python\nFROM python:3.11-slim\n\n# Definimos directorio de trabajo dentro del contenedor\nWORKDIR /app\n\n# Copiamos el archivo de requerimientos\nCOPY requirements.txt .\n\n# Instalamos las dependencias\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copiamos todos los scripts al contenedor\nCOPY . .\n\nEXPOSE 5020\n\n# Definimos el comando por defecto (puedes cambiarlo luego)\nCMD [\"python\", \"server.py\"]\n</code></pre>"},{"location":"server_modbusTCP/#2-docker-composeyaml","title":"2. <code>docker-compose.yaml</code>","text":"<p>El archivo <code>docker-compose.yaml</code> permite levantar el servidor Modbus TCP f\u00e1cilmente usando Docker Compose. Define el servicio, el puerto expuesto y el nombre del contenedor.</p> <p>\u00bfQu\u00e9 hace cada secci\u00f3n? - Define el servicio <code>modbus-server</code> que se construye a partir del <code>Dockerfile</code>. - Asigna un nombre fijo al contenedor. - Expone el puerto 5020 del contenedor al host. - Configura el reinicio autom\u00e1tico del contenedor en caso de fallo.</p> <p>Contenido del archivo:</p> <pre><code>services:\n  modbus-server:\n    build: .\n    container_name: modbus_server\n    ports:\n      - \"5020:5020\"\n    restart: unless-stopped\n</code></pre>"},{"location":"server_modbusTCP/#3-requirementstxt","title":"3. <code>requirements.txt</code>","text":"<p>Este archivo lista las dependencias de Python necesarias para ejecutar el servidor. En este caso, solo se requiere la librer\u00eda <code>pymodbus</code>.</p> <p>Contenido del archivo:</p> <pre><code>pymodbus\n</code></pre>"},{"location":"server_modbusTCP/#4-serverpy","title":"4. <code>server.py</code>","text":"<p>El script principal que implementa el servidor Modbus TCP simulado. Utiliza la librer\u00eda <code>pymodbus</code> para crear el servidor, simula variables anal\u00f3gicas y eventos, y actualiza los valores peri\u00f3dicamente para pruebas y monitoreo.</p> <p>\u00bfQu\u00e9 hace cada secci\u00f3n? - Configura el servidor Modbus TCP y su identidad. - Simula registros de entrada (input registers) y entradas discretas (discrete inputs). - Actualiza peri\u00f3dicamente los valores de los registros con datos aleatorios para simular variables anal\u00f3gicas y eventos. - Permite la conexi\u00f3n de clientes Modbus TCP para pruebas y monitoreo.</p> <p>Contenido del archivo:</p> <pre><code>from pymodbus.server import StartTcpServer\nfrom pymodbus.device import ModbusDeviceIdentification\nfrom pymodbus.datastore import ModbusServerContext, ModbusSlaveContext, ModbusSequentialDataBlock\nimport logging\nimport random\nimport time\nfrom threading import Thread\n\nlogging.basicConfig()\nlog = logging.getLogger()\nlog.setLevel(logging.INFO)\n\n# Simular hasta el registro 30071 \u2192 offset 71\ninput_registers = [0] * 100\n\n# Simular hasta el discrete input 10107 \u2192 offset 106\ndiscrete_inputs = [False] * 110\n\nstore = ModbusSlaveContext(\n    di=ModbusSequentialDataBlock(0, discrete_inputs),\n    co=None,\n    hr=None,\n    ir=ModbusSequentialDataBlock(0, input_registers)\n)\ncontext = ModbusServerContext(slaves=store, single=True)\n\n# Inicializar estados booleanos persistentes\nboolean_states = {\n    3: False, 43: False, 50: False, 55: False, 59: False,\n    63: False, 75: False, 100: False, 105: False, 106: False\n}\n\ndef update_registers(context):\n    change_prob = 0.025  # 10% de probabilidad de cambio\n\n    while True:\n        # Valores anal\u00f3gicos\n        values = {\n            0: random.randint(0, 100),\n            1: random.randint(0, 100),\n            2: random.randint(0, 100),\n            4: random.randint(210, 240),\n            5: random.randint(210, 240),\n            6: random.randint(210, 240),\n            7: random.randint(360, 420),\n            8: random.randint(360, 420),\n            9: random.randint(360, 420),\n            10: random.randint(360, 420),\n            11: random.randint(360, 420),\n            12: random.randint(360, 420),\n            13: random.randint(360, 420),\n            14: random.randint(360, 420),\n            15: random.randint(360, 420),\n            16: random.randint(0, 300),\n            17: random.randint(0, 300),\n            18: random.randint(0, 300),\n            19: random.randint(0, 200),\n            20: random.randint(0, 200),\n            21: random.randint(0, 200),\n            22: random.randint(0, 200),\n            23: random.randint(0, 200),\n            24: random.randint(0, 200),\n            25: random.randint(0, 500),\n            26: random.randint(0, 300),\n            27: random.randint(0, 400),\n            60: random.randint(4900, 5100),\n            61: random.randint(4900, 5100),\n            67: random.randint(900, 1000),\n            68: random.randint(800, 1000),\n            69: random.randint(800, 1000),\n            70: random.randint(800, 1000),\n        }\n\n        # Actualizar input registers\n        for reg, val in values.items():\n            context[0].setValues(4, reg, [val])\n\n        # Determinar si se produce un cambio espor\u00e1dico en cada booleano\n        updated_booleans = {}\n        for reg in boolean_states:\n            if random.random() &lt; change_prob:\n                boolean_states[reg] = not boolean_states[reg]\n            updated_booleans[reg] = boolean_states[reg]\n            context[0].setValues(2, reg, [int(boolean_states[reg])])\n\n        log.info(f\"Actualizaci\u00f3n de registros: {values} | Eventos: {updated_booleans}\")\n        time.sleep(15)\n\ndef run_server():\n    identity = ModbusDeviceIdentification()\n    identity.VendorName = 'SimuladorRecloser'\n    identity.ProductCode = 'RC'\n    identity.VendorUrl = 'http://example.com'\n    identity.ProductName = 'Recloser Simulator'\n    identity.ModelName = 'ModbusTCP'\n    identity.MajorMinorRevision = '1.0'\n\n    thread = Thread(target=update_registers, args=(context,))\n    thread.daemon = True\n    thread.start()\n    StartTcpServer(context, identity=identity, address=(\"0.0.0.0\", 5020))\n\nif __name__ == \"__main__\":\n    run_server()\n</code></pre>"},{"location":"server_modbusTCP/#como-iniciar-el-servidor","title":"C\u00f3mo iniciar el servidor","text":"<p>Primera vez (construcci\u00f3n de imagen incluida):</p> <pre><code>docker compose up --build\n</code></pre> <p>Pr\u00f3ximas veces:</p> <pre><code>docker compose up\n</code></pre> <p>El servidor quedar\u00e1 disponible en <code>localhost:5020</code>.</p>"},{"location":"streamlit/","title":"Documentaci\u00f3n de la aplicaci\u00f3n Streamlit","text":"<p>Esta secci\u00f3n documenta la interfaz web del sistema de monitoreo, implementada usando Streamlit. La aplicaci\u00f3n proporciona una interfaz amigable para visualizar, monitorear y exportar datos del recloser OSM27.</p>"},{"location":"streamlit/#estructura-de-archivos","title":"Estructura de archivos","text":"<pre><code>Streamlit/\n\u251c\u2500\u2500 streamlit_app.py\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 assets/\n    \u251c\u2500\u2500 escudo_ing1.png\n    \u251c\u2500\u2500 ipsep_logo.jpeg\n    \u251c\u2500\u2500 Logo_unrc_horizontal2.png\n    \u2514\u2500\u2500 unrc_logo.jpg\n</code></pre>"},{"location":"streamlit/#requisitos-de-la-aplicacion","title":"Requisitos de la aplicaci\u00f3n","text":"<p>La aplicaci\u00f3n requiere las siguientes dependencias, listadas en <code>requirements.txt</code>:</p> <pre><code>streamlit==1.31.0\npandas\nplotly\nopenpyxl\nmitosheet\ninfluxdb-client\nstreamlit-autorefresh\n</code></pre>"},{"location":"streamlit/#funcionalidades-principales","title":"Funcionalidades principales","text":""},{"location":"streamlit/#1-inicio-de-sesion-y-seguridad","title":"1. Inicio de sesi\u00f3n y seguridad","text":"<p>La aplicaci\u00f3n cuenta con un sistema de inicio de sesion y registro.</p> <p></p> <p>Caracter\u00edsticas: - Inicio de sesi\u00f3n seguro - Almacenamiento de usuarios registrados. _ Registro completo con confirmacion en mail. _ El inicio de sesion tiene una duracion de 30 dias. - Interfaz intuitiva con logo institucional.</p>"},{"location":"streamlit/#2-encabezado-de-la-pagina","title":"2. Encabezado de la p\u00e1gina","text":"<p>La aplicaci\u00f3n muestra un encabezado institucional con los logos y el nombre del sistema.</p> <p></p> <p>Caracter\u00edsticas: - Visualizaci\u00f3n de logos institucionales - Nombre del sistema destacado - Dise\u00f1o responsivo y profesional</p>"},{"location":"streamlit/#3-guia-de-uso","title":"3. Gu\u00eda de uso","text":"<p>La aplicaci\u00f3n est\u00e1 dise\u00f1ada para ser intuitiva y f\u00e1cil de usar.</p> <p></p> <p>Caracter\u00edsticas: - Instrucciones paso a paso - Explicaci\u00f3n de todas las funcionalidades - Referencias r\u00e1pidas - Ayuda interactiva</p>"},{"location":"streamlit/#4-guia-de-datos","title":"4. Gu\u00eda de datos","text":"<p>Incluye documentaci\u00f3n integrada sobre los datos mostrados.</p> <p></p> <p>Caracter\u00edsticas: - Descripci\u00f3n de variables - Unidades de medida - Referencias t\u00e9cnicas - Ayuda contextual</p>"},{"location":"streamlit/#5-monitoreo-en-tiempo-real","title":"5. Monitoreo en tiempo real","text":"<p>La aplicaci\u00f3n muestra gr\u00e1ficos en tiempo real de las variables del recloser.</p> <p></p> <p>Caracter\u00edsticas: - Actualizaci\u00f3n autom\u00e1tica cada 15 segundos - Gr\u00e1ficos interactivos usando Plotly - Visualizaci\u00f3n de m\u00faltiples variables en simult\u00e1neo - Zoom y herramientas de navegaci\u00f3n _ Visualizacion de Valores Actual, Medios, Maximos y Minimos.</p>"},{"location":"streamlit/#6-tabla-de-eventos","title":"6. Tabla de eventos","text":"<p>Muestra los eventos importantes registrados por el recloser.</p> <p></p> <p>Caracter\u00edsticas: - Registro cronol\u00f3gico de eventos - Descripci\u00f3n detallada de cada evento - Actualizaci\u00f3n autom\u00e1tica - Filtrado por fecha y hora</p>"},{"location":"streamlit/#7-exportacion-de-datos","title":"7. Exportaci\u00f3n de datos","text":"<p>Permite exportar los datos mostrados en diferentes formatos.</p> <p> </p> <p>Caracter\u00edsticas: - Exportaci\u00f3n a CSV y Excel - Selecci\u00f3n de rango de fechas - Filtrado de variables a exportar - Descarga directa desde la interfaz</p>"},{"location":"streamlit/#guia-de-uso","title":"Gu\u00eda de uso","text":"<p>La aplicaci\u00f3n est\u00e1 dise\u00f1ada para ser intuitiva y f\u00e1cil de usar.</p> <p>Pasos b\u00e1sicos: 1. Inicie sesi\u00f3n con sus credenciales institucionales 2. Explore los gr\u00e1ficos de monitoreo en tiempo real 3. Revise la tabla de eventos si necesita informaci\u00f3n espec\u00edfica 4. Use las herramientas de filtrado para analizar per\u00edodos espec\u00edficos 5. Exporte los datos cuando necesite an\u00e1lisis offline</p>"},{"location":"streamlit/#codigo-principal-streamlit_apppy","title":"C\u00f3digo principal (<code>streamlit_app.py</code>)","text":"<p>El archivo principal contiene toda la l\u00f3gica de la aplicaci\u00f3n:</p> <ul> <li>Sistema de autenticaci\u00f3n</li> <li>Conexi\u00f3n con InfluxDB</li> <li>Visualizaci\u00f3n de datos</li> <li>Manejo de eventos</li> <li>Exportaci\u00f3n de datos</li> <li>Interfaz de usuario</li> </ul> <p>El c\u00f3digo est\u00e1 organizado en secciones claras y documentadas, facilitando su mantenimiento y extensi\u00f3n.</p>"},{"location":"streamlit/#configuracion-y-despliegue","title":"Configuraci\u00f3n y despliegue","text":"<p>Para ejecutar la aplicaci\u00f3n:</p> <ol> <li>Instalar dependencias:</li> </ol> <pre><code>pip install -r requirements.txt\n</code></pre> <ol> <li>Ejecutar la aplicaci\u00f3n:</li> </ol> <pre><code>streamlit run streamlit_app.py\n</code></pre> <ol> <li>Acceder a la interfaz web:</li> <li>Abra su navegador en <code>http://localhost:8501</code></li> <li>Inicie sesi\u00f3n con sus credenciales</li> <li>\u00a1Comience a monitorear!</li> </ol> <p>La aplicaci\u00f3n se actualizar\u00e1 autom\u00e1ticamente cada 15 segundos para mostrar los datos m\u00e1s recientes del recloser.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/","title":"Documento de Dise\u00f1o, Implementaci\u00f3n y Pruebas","text":"<p>Revisi\u00f3n: 00 Fecha: 09/06/2025</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#visualizacion-de-datos-equipo-noja","title":"Visualizaci\u00f3n de Datos Equipo NOJA","text":"Fecha de entrega 23/06/2025 Fecha de inicio del Proyecto 19/05/2025 Duraci\u00f3n 1 Asunto Obtenci\u00f3n y visualizaci\u00f3n de datos del equipo reconectador NOJA Power. Socios para este entregable Juan Carlos Amati, Pablo Solivellas, Daniel Anunziata"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#nivel-de-difusion","title":"Nivel de difusi\u00f3n","text":"Nivel Descripci\u00f3n Observaciones PU P\u00fablico. UI Uso interno, para uso interno de IPSEP. No est\u00e1 permitida la distribuci\u00f3n libre de la informaci\u00f3n fuera de la organizaci\u00f3n. RS Restringido bajo las condiciones establecidas en el Modelo de Acuerdo de Trabajo. La versi\u00f3n que proporcionar\u00e1 F3-Telecomunicaciones tendr\u00e1 toda la informaci\u00f3n necesaria para realizar su evaluaci\u00f3n. X CO Confidencial, IPSEP solo proveer\u00e1 una versi\u00f3n del documento mediante un acuerdo de confidencialidad previo por escrito a tal fin. <p>\u00a9 F3-Telecomunicaciones 2025, todos los derechos reservados.</p> <p>C\u00f3digo: 2606 Fecha: 09/06/2025 Revisi\u00f3n: 0</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#sobre-este-documento","title":"Sobre este documento","text":"<p>Preparado por: Equipo F3-Telecomunicaciones</p> <p>Responsable:</p> Nombre Fecha Milanesio, Valent\u00edn 09/06/2025 <p>Revisado por:</p> Nombre Fecha Solivellas, Pablo 09/06/2025 Anunziata, Daniel 09/06/2025 <p>Aprobado por:</p> Nombre Fecha Solivellas, Pablo 09/06/2025 Anunziata, Daniel 09/06/2025 <p>NOTA IMPORTANTE: El contenido de este documento es propiedad intelectual de F3-Telecomunicaciones y no podr\u00e1 ser copiado en su totalidad, en parte o reproducido (ya sea por medio de fotograf\u00eda, reprograf\u00eda o cualquier otro m\u00e9todo) y su contenido no ser\u00e1 divulgado a ninguna otra persona u organizaci\u00f3n sin el consentimiento previo por escrito de F3-Telecomunicaciones. Dicho consentimiento se otorga autom\u00e1ticamente a IPSEP para su uso y distribuci\u00f3n.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#lista-de-modificaciones","title":"Lista de Modificaciones","text":"VERSI\u00d3N FECHA P\u00c1GINAS CAMBIOS OBSERVACIONES 00 09/06/2025 TODAS REVISI\u00d3N INICIAL"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#lista-de-distribucion","title":"Lista de Distribuci\u00f3n","text":"FECHA NOMBRE FUNCI\u00d3N ORGANIZACI\u00d3N N\u00ba COPIAS 09/06/2025 Juan Carlos Amati BENEFICIARIO IPSEP 1 09/06/2025 Pablo Solivellas REVISI\u00d3N LABREDES 1 09/06/2025 Daniel Anunziata REVISI\u00d3N LABREDES 1"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#indice","title":"\u00cdndice","text":"<ol> <li>Introducci\u00f3n</li> <li>Alcance</li> <li>T\u00e9rminos, definiciones y t\u00e9rminos abreviados</li> <li>Arquitectura del sistema</li> <li>Dise\u00f1o de componentes</li> <li>Dise\u00f1o de datos</li> <li>Implementaci\u00f3n</li> <li>Pruebas y calidad</li> <li>Despliegue y operaci\u00f3n</li> <li>Bibliograf\u00eda</li> <li>Anexos</li> </ol>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#introduccion","title":"Introducci\u00f3n","text":"<p>Este documento describe el dise\u00f1o y la implementaci\u00f3n del software para el proyecto Visualizaci\u00f3n de datos equipo NOJA, desarrollado en el marco de contrato y destinado a IPSEP. Su objetivo es presentar:</p> <ul> <li>La arquitectura global del sistema, detallando los distintos m\u00f3dulos y su interacci\u00f3n.</li> <li>Los patrones de dise\u00f1o y las decisiones tecnol\u00f3gicas empleadas.</li> <li>El dise\u00f1o de datos: modelos, esquemas y flujos de informaci\u00f3n.</li> <li>El plan de implementaci\u00f3n: estructura del c\u00f3digo, est\u00e1ndares de calidad y herramientas de compilaci\u00f3n e integraci\u00f3n continua.</li> <li>La estrategia de pruebas y el despliegue en los entornos previstos.</li> </ul> <p>El documento ha sido producido siguiendo las pautas de los est\u00e1ndares de documentaci\u00f3n previstos en las normas vigentes y en la documentaci\u00f3n de soporte del proyecto. El mismo est\u00e1 organizado en las siguientes secciones:</p> <ul> <li>Secci\u00f3n 1: Introducci\u00f3n. Prop\u00f3sito, alcance y referencias bibliogr\u00e1ficas.</li> <li>Secci\u00f3n 2: Arquitectura del Sistema. Diagrama de componentes, descripci\u00f3n de subsistemas y comunicaciones.</li> <li>Secci\u00f3n 3: Dise\u00f1o de Componentes. Detalle de cada m\u00f3dulo, sus interfaces y responsabilidades.</li> <li>Secci\u00f3n 4: Dise\u00f1o de Datos. Detallado de las variables y de su base de datos correspondiente.</li> <li>Secci\u00f3n 5: Implementaci\u00f3n. Estructura del repositorio, convenciones de codificaci\u00f3n, entorno de desarrollo y automatizaci\u00f3n de compilaci\u00f3n.</li> <li>Secci\u00f3n 6: Pruebas y Calidad. Estrategia de pruebas unitarias, de integraci\u00f3n y de aceptaci\u00f3n, as\u00ed como m\u00e9tricas de cobertura.</li> <li>Secci\u00f3n 7: Despliegue y Operaci\u00f3n. Procedimiento de instalaci\u00f3n, configuraci\u00f3n de entornos y monitoreo en producci\u00f3n.</li> <li>Bibliograf\u00eda: Bibliograf\u00eda asociada al documento.</li> <li>Anexos: Documentaci\u00f3n anexa.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#alcance","title":"Alcance","text":"<p>Este documento abarca las fases de dise\u00f1o conceptual, dise\u00f1o detallado e implementaci\u00f3n del software, incluyendo la definici\u00f3n de la arquitectura, la construcci\u00f3n de los componentes, sus pruebas y su puesta en marcha. Aplica a todo el equipo de desarrollo y al personal de operaciones, de modo que cualquier cambio en la arquitectura o el c\u00f3digo debe reflejarse aqu\u00ed para garantizar:</p> <ul> <li>La trazabilidad de las decisiones de dise\u00f1o y de los requerimientos hasta el c\u00f3digo fuente.</li> <li>La coherencia entre la documentaci\u00f3n, los artefactos de dise\u00f1o y la implantaci\u00f3n.</li> <li>La interfaz clara entre los stakeholders (usuarios finales y gestores de proyecto) y el equipo t\u00e9cnico.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#terminos-definiciones-y-terminos-abreviados","title":"T\u00e9rminos, definiciones y t\u00e9rminos abreviados","text":""},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#terminos","title":"T\u00e9rminos","text":"<ul> <li>Docker: Plataforma de virtualizaci\u00f3n ligera que permite empaquetar una aplicaci\u00f3n y todas sus dependencias en contenedores.</li> <li>Modbus TCP: Versi\u00f3n del protocolo Modbus que utiliza TCP/IP para la comunicaci\u00f3n sobre redes Ethernet.</li> <li>Streamlit: Framework de Python de c\u00f3digo abierto que permite construir aplicaciones web interactivas orientadas a la visualizaci\u00f3n de datos.</li> <li>CSV: Formato de archivo de texto plano que almacena datos en forma tabular, donde cada l\u00ednea representa una fila y los valores est\u00e1n separados por comas (u otros delimitadores).</li> <li>InfluxDB: Base de datos orientada a series temporales, optimizada para almacenar, consultar y analizar datos.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#terminos-abreviados","title":"T\u00e9rminos abreviados","text":"<ul> <li>SDITD: Documento de Dise\u00f1o, Implementaci\u00f3n y Pruebas de Software (Software Design, Implementation and Testing Document).</li> <li>HW: Hardware.</li> <li>SW: Software.</li> <li>IPSEP: Instituto de Protecciones de Sistemas El\u00e9ctricos de Potencia.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#arquitectura-del-sistema","title":"Arquitectura del sistema","text":"<p>Este apartado describe la visi\u00f3n global de la soluci\u00f3n, mostrando c\u00f3mo se organiza el sistema en componentes y subsistemas. Incluye diagramas de alto nivel, las tecnolog\u00edas y protocolos empleados, y explica las comunicaciones e integraciones entre los distintos m\u00f3dulos y servicios.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#vision-general","title":"Visi\u00f3n general","text":"<p>El sistema est\u00e1 dise\u00f1ado para realizar el monitoreo automatizado del reconectador NOJA Power OSM27 a trav\u00e9s de una arquitectura modular dockerizada. Utiliza el protocolo ModbusTCP para comunicarse con el equipo, adquiere m\u00e9tricas el\u00e9ctricas de inter\u00e9s y las almacena en una base de datos InfluxDB.</p> <p>El sistema est\u00e1 compuesto por distintos servicios que se orquestan mediante Docker Compose, permitiendo portabilidad, despliegue sencillo y escalabilidad. La visualizaci\u00f3n de datos se realiza mediante una p\u00e1gina web con Streamlit, y tambi\u00e9n se ofrece la posibilidad de exportar los datos en formato CSV para an\u00e1lisis externo. Toda la informaci\u00f3n es accesible desde la red del IPSEP y el sistema opera en ciclos de adquisici\u00f3n cada 15 minutos.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#diagrama-de-componentes","title":"Diagrama de componentes","text":""},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#subsistemas-y-modulos","title":"Subsistemas y m\u00f3dulos","text":"<p>El sistema est\u00e1 compuesto por los siguientes m\u00f3dulos principales:</p> <ul> <li>Cliente Modbus: Servicio en Python que act\u00faa como cliente ModbusTCP. Se conecta peri\u00f3dicamente al OSM27 para adquirir variables el\u00e9ctricas como tensiones, corrientes, potencias y eventos. Emplea la librer\u00eda pymodbus.</li> <li>InfluxDB: Base de datos de series temporales. Recibe e indexa los datos el\u00e9ctricos adquiridos, facilitando consultas eficientes y almacenamiento optimizado por tiempo. Se utiliza la estructura de mediciones con etiquetas y campos personalizables.</li> <li>Exportador CSV: M\u00f3dulo que permite la exportaci\u00f3n de datos hist\u00f3ricos desde InfluxDB a archivos .csv, bajo demanda o como tarea peri\u00f3dica. Es \u00fatil para respaldos o an\u00e1lisis externos.</li> <li>Streamlit Interfaz Web: Aplicaci\u00f3n web creada en Streamlit, encargada de presentar las m\u00e9tricas de forma gr\u00e1fica e intuitiva. Permite acceder a los datos en tiempo real desde cualquier navegador conectado a la red, y soporta visualizaci\u00f3n por fecha, variable y estado.</li> </ul> <p>Todos los servicios -salvo el Cliente Modbus- est\u00e1n containerizados y definidos en docker-compose.yml, comunic\u00e1ndose entre s\u00ed mediante red Docker interna.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#comunicaciones-e-integraciones","title":"Comunicaciones e integraciones","text":"<p>El sistema se basa en una arquitectura distribuida con los siguientes protocolos y tecnolog\u00edas de integraci\u00f3n:</p> <ul> <li>ModbusTCP: utilizado por el m\u00f3dulo cliente_modbus para comunicarse con el reconectador NOJA OSM27. El equipo act\u00faa como servidor Modbus, mientras que el m\u00f3dulo Python realiza lecturas sobre registros configurados.</li> <li>InfluxDB: almacena los datos adquiridos en forma de series temporales. El cliente Modbus formatea los datos y los inserta utilizando la API de escritura de InfluxDB (v\u00eda HTTP o cliente Python).</li> <li>Streamlit: se encarga de la interfaz gr\u00e1fica. Se conecta a InfluxDB usando la API de consulta o librer\u00edas cliente para recuperar y visualizar los datos din\u00e1micamente en tiempo real.</li> <li>Exportaci\u00f3n CSV: los datos pueden ser exportados en archivos CSV para procesamiento adicional o respaldo externo.</li> <li>Docker Compose: todos los servicios est\u00e1n containerizados para facilitar su integraci\u00f3n y despliegue. La red Docker interna garantiza la comunicaci\u00f3n entre contenedores sin necesidad de configuraci\u00f3n adicional.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#diseno-de-componentes","title":"DISE\u00d1O DE COMPONENTES","text":"<p>Esta secci\u00f3n profundiza en el dise\u00f1o interno de cada m\u00f3dulo, describiendo su l\u00f3gica de funcionamiento, las interfaces que expone y los patrones de dise\u00f1o aplicados.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#modulo-1-cliente-modbus","title":"M\u00f3dulo 1: Cliente Modbus","text":"<p>Funci\u00f3n:</p> <p>Este m\u00f3dulo es el encargado de adquirir las m\u00e9tricas el\u00e9ctricas del reconectador NOJA Power OSM27 utilizando el protocolo ModbusTCP. Realiza la conexi\u00f3n como cliente, consulta registros espec\u00edficos y procesa los datos para su posterior almacenamiento.</p> <p>Contexto de uso:</p> <p>Cada 15 minutos, ejecuta un ciclo de lectura, adquiere los datos y los publica en la base de datos InfluxDB.</p> <p>Tecnolog\u00edas y librer\u00edas utilizadas:</p> <ul> <li>Python 3.12</li> <li>pymodbus para comunicaci\u00f3n Modbus.</li> <li>influxdb-client para insertar datos.</li> </ul> <p>Flujo interno:</p> <ol> <li>Cargar configuraci\u00f3n (IP, puerto, registros, etc.)</li> <li>Conectar al servidor Modbus (OSM27)</li> <li>Leer los registros configurados (tensiones, corrientes, potencias, etc.)</li> <li>Formatear los datos como puntos de serie temporal</li> <li>Escribir en InfluxDB</li> </ol> <p>Interfaces expuestas:</p> <p>Este m\u00f3dulo no expone una API p\u00fablica, ya que act\u00faa como proceso aut\u00f3nomo. Su salida son los puntos insertados en la base de datos.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#modulo-2-influxdb-motor-de-almacenamiento","title":"M\u00f3dulo 2: InfluxDB (motor de almacenamiento)","text":"<p>Funci\u00f3n:</p> <p>Almacenar series temporales de datos el\u00e9ctricos provenientes del m\u00f3dulo de adquisici\u00f3n.</p> <p>Contexto de uso:</p> <p>Ejecutado como contenedor independiente gestionado por Docker Compose. Permite almacenamiento, indexaci\u00f3n y consultas eficientes sobre datos con marcas de tiempo.</p> <p>Caracter\u00edsticas clave:</p> <ul> <li>Organizaci\u00f3n por measurement, fields y tags</li> <li>Compresi\u00f3n de datos y manejo eficiente de grandes vol\u00famenes</li> <li>Consultas por rango de tiempo.</li> </ul> <p>Interfaces expuestas:</p> <ul> <li>API HTTP REST para escritura y lectura (8086)</li> <li>Cliente Python (influxdb-client) utilizado por los otros m\u00f3dulos</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#modulo-3-streamlit-interfaz-web","title":"M\u00f3dulo 3: Streamlit Interfaz Web","text":"<p>Funci\u00f3n:</p> <p>Interfaz gr\u00e1fica para visualizaci\u00f3n de m\u00e9tricas hist\u00f3ricas y en tiempo real. Permite al usuario explorar los datos de forma intuitiva mediante gr\u00e1ficos, filtros y selecci\u00f3n de variables.</p> <p>Contexto de uso:</p> <p>M\u00f3dulo implementado como contenedor Docker independiente, y ejecutado mediante Docker Compose como aplicaci\u00f3n web accesible por navegador desde la red del IPSEP.</p> <p>Tecnolog\u00edas:</p> <ul> <li>Python 3.12-slim</li> <li>Streamlit</li> <li>influxdb-client (para consultas)</li> </ul> <p>Flujo de funcionamiento:</p> <ol> <li>El usuario accede a la interfaz en el navegador.</li> <li>La aplicaci\u00f3n solicita datos a InfluxDB seg\u00fan los filtros seleccionados.</li> <li>Los datos se muestran en gr\u00e1ficos interactivos (l\u00edneas, \u00e1reas, etc.)</li> <li>Permite exportar datos visualizados a CSV desde la interfaz.</li> </ol> <p>Interfaces expuestas:</p> <ul> <li>P\u00e1gina web accesible v\u00eda http://localhost:8501 (o IP del servidor)</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#diseno-de-datos","title":"DISE\u00d1O DE DATOS","text":"<p>En este apartado se define el modelo de datos que sustenta la aplicaci\u00f3n, detallando entidades, relaciones y estructura de almacenamiento.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#esquemas-de-base-de-datos","title":"Esquemas de Base de Datos","text":"<p>El sistema utiliza InfluxDB como base de datos especializada para el almacenamiento de series temporales. A diferencia de las bases de datos relacionales, InfluxDB no emplea tablas ni claves primarias/for\u00e1neas tradicionales. En su lugar, los datos se estructuran en measurements, que contienen puntos con:</p> <ul> <li>timestamp (marca temporal obligatoria),</li> <li>fields (valores num\u00e9ricos medidos), y</li> <li>tags (atributos categ\u00f3ricos que permiten segmentaci\u00f3n y filtrado).</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#diccionario-de-datos","title":"Diccionario de Datos","text":"<p>Se detalla a continuaci\u00f3n la estructura l\u00f3gica de la entidad principal del sistema, mediciones, incluyendo campos y etiquetas relevantes, sus tipos de datos, restricciones y descripciones:</p> Tabla Columna Tipo de dato Descripciones mediciones Ia integer Corriente en fase A (Amperes) mediciones Ib integer Corriente en fase B (Amperes) mediciones Ic integer Corriente en fase C (Amperes) mediciones Ua integer Tensi\u00f3n en fase A (Voltios) mediciones Ub integer Tensi\u00f3n en fase B (Voltios) mediciones Uc integer Tensi\u00f3n en fase C (Voltios) mediciones Ur integer Tensi\u00f3n en secuencia R (Voltios) mediciones Us integer Tensi\u00f3n en secuencia S (Voltios) mediciones Ut integer Tensi\u00f3n en secuencia T (Voltios) mediciones Uab integer Tensi\u00f3n entre fases A-B (Voltios) mediciones Ubc integer Tensi\u00f3n entre fases B-C (Voltios) mediciones Uca integer Tensi\u00f3n entre fases C-A (Voltios) mediciones Urs integer Tensi\u00f3n entre secuencias R-S (Voltios) mediciones Ust integer Tensi\u00f3n entre secuencias S-T (Voltios) mediciones Utr integer Tensi\u00f3n entre secuencias T-R (Voltios) mediciones kVA A integer Potencia aparente fase A (VA) mediciones kVA B integer Potencia aparente fase B (VA) mediciones kVA C integer Potencia aparente fase C (VA) mediciones kW A integer Potencia activa fase A (Watt) mediciones kW B integer Potencia activa fase B (Watt) mediciones kW C integer Potencia activa fase C (Watt) mediciones kVAr A integer Potencia reactiva fase A (VAR) mediciones kVAr B integer Potencia reactiva fase B (VAR) mediciones kVAr C integer Potencia reactiva fase C (VAR) mediciones kVA total integer Potencia aparente total (VA) mediciones kW total integer Potencia activa total (Watt) mediciones kVAr total integer Potencia reactiva total (VAR) mediciones Freq abc float Frecuencia (Hz) mediciones equipo string (TAG) Identificador del equipo (ej. \u201cOSM27\u201d) mediciones ubicaci\u00f3n string (TAG) Ubicaci\u00f3n geogr\u00e1fica o l\u00f3gica del dispositivo"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#implementacion","title":"IMPLEMENTACI\u00d3N","text":"<p>La totalidad de los archivos nombrados se encuentran en un repositorio de la plataforma Github bajo el nombre danunziata/TP_FINAL-TCP_IP_2025-Grupo_2.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#estructura-del-repositorio","title":"Estructura del Repositorio","text":"<p>TP_FINAL-TCP_IP_2025-Grupo_2/</p> <p>\u251c\u2500\u2500 Documentacion/         # Sitio MKDocs con manuales, diagramas e im\u00e1genes \u251c\u2500\u2500 Streamlit/                 # Aplicaci\u00f3n web para visualizar datos</p> <p>\u251c\u2500\u2500 client_modbusTCP/        # Cliente Modbus que guarda mediciones en InfluxDB \u251c\u2500\u2500 database_InfluxDB/        # Configuraci\u00f3n de InfluxDB (Docker Compose, datos) \u251c\u2500\u2500 server_modbusTCP/      # Servidor Modbus TCP simulado (Dockerfile y scripts) \u251c\u2500\u2500 iniciar_entorno.sh           # Script para levantar cliente, servidor y base de datos \u251c\u2500\u2500 detener_entorno.sh        # Script para detener servicios en ejecuci\u00f3n</p> <p>\u2514\u2500\u2500 .github/workflows/           # Workflow de GitHub Actions para notificaciones Carpetas principales**</p> <p>client_modbusTCP</p> <p>Cliente Modbus escrito en Python que se conecta al servidor y guarda registros en InfluxDB. Incluye los scripts client.py, client_once.py y su requirements.txt.</p> <p>database_InfluxDB</p> <p>Configuraci\u00f3n de la base de datos InfluxDB. Contiene el docker-compose.yaml para levantar la base y una carpeta data/ con archivos persistentes. Su README explica c\u00f3mo instalar y operar InfluxDB.</p> <p>Streamlit</p> <p>Aplicaci\u00f3n de visualizaci\u00f3n en Streamlit. Incluye streamlit_app.py, el archivo config.yaml con usuarios y un requirements.txt con dependencias. Tambi\u00e9n alberga im\u00e1genes y recursos para la interfaz.</p> <p>Documentaci\u00f3n</p> <p>Documentos del proyecto en formato Markdown y recursos para MkDocs. El archivo mkdocs.yml define la navegaci\u00f3n del sitio con secciones para diagramas, requerimientos e implementaci\u00f3n del sistema.</p> <p>La carpeta server_modbusTCP no es analizada ni tenida en cuenta ya que el servidor ser\u00e1 el propio equipo para el cual fue desarrollada la aplicaci\u00f3n. Esta carpeta presenta un contenedor docker que simula la generaci\u00f3n de datos del equipo para que el cliente pueda consultar y enviarlos hacia la base de datos, siguiendo con el flujo presentado.</p> <p>Scripts y automatizaci\u00f3n</p> <p>iniciar_entorno.sh</p> <p>Automatiza la puesta en marcha de todo el entorno: verifica e instala dependencias, inicia el cliente a partir de su script de python, levanta InfluxDB y lanza la app de Streamlit.</p> <p>detener_entorno.sh</p> <p>Detiene y elimina los contenedores de Docker y finaliza el cliente Modbus en ejecuci\u00f3n.</p> <p>Integraci\u00f3n continua</p> <p>En  .github/workflows/deploy.yml  se  define  un  workflow  de  GitHub  Actions  que  env\u00eda notificaciones a un webhook de Discord cada vez que se realiza un push o una pull request. El flujo no compila ni ejecuta pruebas; \u00fanicamente env\u00eda mensajes.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#entorno-de-desarrollo","title":"Entorno de Desarrollo","text":"<p>El  entorno  de  desarrollo  del  proyecto  se  configura  autom\u00e1ticamente  mediante  el  script iniciar_entorno.sh,  incluido  en  el  repositorio.  Este  script  instala  todas  las  dependencias  necesarias  y levanta los servicios esenciales para la operaci\u00f3n del sistema, permitiendo una inicializaci\u00f3n reproducible del entorno completo.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#lenguaje-base-y-contenedor-principal","title":"Lenguaje base y contenedor principal","text":"<ul> <li>Python 3.11 (imagen base: python:3.11-slim)</li> </ul> <p>Utilizado como entorno de ejecuci\u00f3n principal para el servidor Modbus TCP simulado. Esta imagen ligera de Python garantiza compatibilidad con librer\u00edas de networking industrial y bajo consumo de recursos.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#paquetes-python-requeridos","title":"Paquetes Python requeridos","text":"<p>Para el funcionamiento completo del sistema, tanto en su backend como en la interfaz web, se utilizan las siguientes librer\u00edas:</p> <ul> <li>*influxdb-client==1.38.0: Cliente oficial para InfluxDB v2, utilizado para la escritura y consulta de series temporales desde el servidor Modbus simulado.</li> <li>*streamlit (\u00faltima versi\u00f3n estable: 1.35.0)  Framework para construir la interfaz web interactiva de visualizaci\u00f3n.</li> <li>*pandas (v2.2.2)  Para manipulaci\u00f3n y procesamiento de datos tabulares.</li> <li>*plotly (v5.21.0)  Generaci\u00f3n de gr\u00e1ficos din\u00e1micos y visualizaciones interactivas.</li> <li>*openpyxl (v3.1.2)  Soporte para exportaci\u00f3n e importaci\u00f3n de archivos Excel desde la interfaz.</li> <li>*mitosheet (v0.1.502)  Visualizaci\u00f3n tipo hoja de c\u00e1lculo para edici\u00f3n r\u00e1pida de datasets en Streamlit.</li> <li>*streamlit-autorefresh (v0.0.4)  Permite actualizar autom\u00e1ticamente la interfaz en intervalos definidos.</li> <li>*streamlit-authenticator (v0.2.2)  M\u00f3dulo de autenticaci\u00f3n para proteger el acceso a la interfaz Streamlit.</li> <li>*pymodbus (v3.6.6)</li> </ul> <p>Librer\u00eda utilizada para simular el servidor Modbus TCP y manejar los registros expuestos por el mismo.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#contenedores-y-orquestacion","title":"Contenedores y orquestaci\u00f3n","text":"<ul> <li>Docker* (v25.0.3*)  Plataforma para contenerizaci\u00f3n de la aplicaci\u00f3n Python, la base de datos InfluxDB y servicios auxiliares.</li> <li>Docker Compose* (v2.27.0*)</li> </ul> <p>Herramienta de orquestaci\u00f3n para levantar y gestionar los servicios de forma declarativa (archivo ![ref3]</p> <p>docker-compose.yml). Se encarga de iniciar tanto el servidor Modbus como la base de datos InfluxDB.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#pruebas-y-calidad","title":"PRUEBAS Y CALIDAD","text":"<p>En esta secci\u00f3n se define la estrategia completa de verificaci\u00f3n y validaci\u00f3n del software.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#checklist-para-verificacion-de-obtencion-de-datos","title":"Checklist para verificaci\u00f3n de obtenci\u00f3n de datos","text":"<ul> <li>Correcta conexi\u00f3n con el equipo NOJA Power</li> <li>Obtenci\u00f3n de datos a partir del protocolo Modbus TCP.</li> <li>Guardado de datos en base de datos InfluxDB.</li> <li>Visualizaci\u00f3n de datos en interfaz web a trav\u00e9s de Streamlit.</li> <li>Posibilidad de exportar datos a partir del formato \u201c.csv\u201d.</li> <li>Acceso desde la red interna de la facultad.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#despliegue-y-operacion","title":"DESPLIEGUE Y OPERACI\u00d3N","text":"<p>Esta secci\u00f3n establece los procedimientos para la instalaci\u00f3n, configuraci\u00f3n y mantenimiento del sistema en los entornos de pruebas y producci\u00f3n.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#pre-requisitos","title":"Pre-requisitos","text":"<p>Para  instalar  y  operar  la  soluci\u00f3n de monitoreo es necesario contar con un entorno que satisfaga ciertos requisitos de hardware, software, red y permisos. A continuaci\u00f3n se describen los elementos esenciales basados en la documentaci\u00f3n y scripts del repositorio.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#software-basico","title":"Software b\u00e1sico","text":"<p>El software b\u00e1sico necesario para la implementaci\u00f3n del sistema es el detallado en la secci\u00f3n anterior. El mismo se instala autom\u00e1ticamente al ejecutar el script iniciar_entorno.sh.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#configuracion-de-red-y-puertos","title":"Configuraci\u00f3n de red y puertos","text":"<p>Los  distintos  componentes  utilizan  los  siguientes  puertos  locales,  por  lo  que  deben  estar disponibles y habilitados en la m\u00e1quina de despliegue:</p> <ul> <li>5020 \u2013 Puerto del servidor Modbus TCP seg\u00fan docker-compose.yaml del servidor:</li> <li>8086 \u2013 Puerto para la interfaz web y API de InfluxDB</li> <li>8501 \u2013 Puerto por defecto de la aplicaci\u00f3n Streamlit, indicado en la gu\u00eda de uso.</li> </ul>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#requisitos-de-hardware-y-permisos","title":"Requisitos de hardware y permisos","text":"<p>Se recomienda contar con un equipo capaz de ejecutar Docker y Docker Compose con al menos algunos gigabytes de memoria disponible para los contenedores de InfluxDB y del simulador Modbus. Adem\u00e1s, ser\u00e1 necesario:</p> <ul> <li>Permisos de administrador o pertenencia al grupo docker para ejecutar los contenedores.</li> <li>Conexi\u00f3n de red local que permita acceder a los puertos indicados (5020, 8086 y 8501).</li> <li>Python 3.x (se usa la imagen python:3.11-slim en el Dockerfile del servidor) para ejecutar los scripts fuera de contenedores si se desea.</li> </ul> <p>Con  estos  pre\u2011requisitos  cubiertos,  es  posible  iniciar  el  entorno  mediante  el  script iniciar_entorno.sh, que automatiza la instalaci\u00f3n de dependencias y el arranque de los componentes del sistema</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#procedimiento-de-despliegue","title":"Procedimiento de Despliegue","text":"<p>Se describen de forma detallada los pasos, scripts y comandos necesarios para instalar y actualizar el sistema (realizado para un sistema operativo Linux Xubuntu 22.04 y similares):</p> <ul> <li>Poseer el conjunto completo de scripts detallados en la secci\u00f3n 5, los cuales se encuentran en el repositorio de GitHub nombrado.</li> <li>Instalar los requerimientos tanto del cliente modbus como de la interfaz web Streamlit, a partir de los comandos pip install -r client_modbusTCP/requirements.txt para el cliente, y pip install -r Streamlit/requirements.txt</li> <li>Levantar la base de datos mediante docker compose, a trav\u00e9s del comando docker compose up dentro de la carpeta \u201cdatabase_InfluxDB\u201d.</li> <li>Iniciar el cliente modbus, el cual debe apuntar a la direcci\u00f3n IP y puerto correspondientes al equipo, mediante el comando python3 client.py dentro de la carpeta \u201cclient_modbusTCP\u201d.</li> <li>Iniciar  finalmente  la  aplicaci\u00f3n  web  para  poder  visualizar  los  datos  correspondientes, mediante el comando streamlit run streamlit_app.py dentro de la carpeta \u201cStreamlit\u201d.</li> </ul> <p>Para detener el entorno, se deben ejecutar los comandos docker compose down (para dar de baja un contenedor docker) y pkill -f (para matar un proceso python) seg\u00fan corresponda.</p> <p>Todo  esto  ha  sido  automatizado  a  partir  de  dos  scripts  de  ejecuci\u00f3n  y  detenci\u00f3n: iniciar_entorno.sh  y  detener_entorno.sh  respectivamente.  Mediante  la  ejecuci\u00f3n  de  estos  dos c\u00f3digos  bash  se  puede  realizar  la  inicializaci\u00f3n  y  detenci\u00f3n  autom\u00e1tica  de  todo  el  entorno, ejecutandolos desde la carpeta ra\u00edz del repositorio GitHub.</p>"},{"location":"Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/Documentacion_de_dise%C3%B1o_implementacion_y_pruebas/#bibliografia","title":"BIBLIOGRAF\u00cdA","text":"<p>IEEE Standard 1016-2009: \u201cSoftware Design Descriptions (SDD)\u201d</p> <p>Pressman, Roger S. Ingenier\u00eda del Software - Un Enfoque Pr\u00e1ctico. Cuarta Edici\u00f3n ed., McGraw-Hill  Companies, 1998.</p> <p>Sommerville, Ian. Ingenier\u00eda de software. Novena Edici\u00f3n ed., Pearson Education Inc., 2012.</p> <p>Thyler, Richard H., et al. Software Requirements Engineering. Second Edition ed., Wiley-IEEE Computer Society Pr., 1997.</p> <p>Roos, Patrick (2023). \u201cThe Ultimate Guide To Software Architecture Documentation.\u201d</p> <p>Mezzalira, Luca (2024). \u201cHow to Document Software Architecture: Techniques and Best Practices.\u201d NOJA Power (2024). Gu\u00eda de comunicaci\u00f3n Ethernet con el reconectador NOJA OSM15-16-800.</p> <p>NOJA Power (2021). Modbus in Reclosers. https://www.nojapower.com/expertise/2021/modbus-in-reclosers</p> <p>InfluxData (2025). InfluxDB Client Library for Python \u2013 Documentation. https://github.com/influxdata/influxdb-client-python</p> <p>Streamlit Inc. (2025). Streamlit Documentation. https://docs.streamlit.io</p> <p>Modbus.org. (2024). Modbus Application Protocol Specification V1.1b3. https://modbus.org</p> <p>UNRC  \u00a9 F3-Telecomunicaciones 2025, todos los derechos reservados.  SDITD</p>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/","title":"Especificaci\u00f3n de Requerimientos","text":"<p>Universidad Nacional de R\u00edo Cuarto Ingenier\u00eda en Telecomunicaciones</p> <p>Asignatura: Aplicaciones TCP-IP Fecha: 25 de junio de 2025</p> <p></p>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#proyecto","title":"Proyecto","text":"<p>Sistema de Monitoreo para Reconectador Autom\u00e1tico NOJA Power Cliente: IPSEP (Juan Carlos Amati)</p> <p>Fecha de inicio de proyecto: 19/05/2025 Fecha de entrega: 25/06/2025 Equipo: F3 - Grupo 2</p>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#1-introduccion","title":"1. Introducci\u00f3n","text":"<p>Este informe documenta los requerimientos del sistema a desarrollar para el monitoreo de un reconectador autom\u00e1tico OSM27 de la marca NOJA Power, seg\u00fan lo relevado con el cliente. El objetivo es establecer los lineamientos funcionales y no funcionales para asegurar que el sistema cumpla con las necesidades operativas de monitoreo y an\u00e1lisis de datos el\u00e9ctricos en tiempo real y de forma remota.</p>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#2-descripcion-general","title":"2. Descripci\u00f3n general","text":"<p>El cliente requiere un sistema que permita obtener, almacenar y visualizar informaci\u00f3n cr\u00edtica del reconectador autom\u00e1tico, con el fin de realizar un monitoreo continuo del estado de la red el\u00e9ctrica. La informaci\u00f3n debe ser accesible de forma remota a trav\u00e9s de un sitio web.</p>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#3-requerimientos-funcionales","title":"3. Requerimientos funcionales","text":"<p>A continuaci\u00f3n, se enumeran los requerimientos funcionales expresados por el cliente:</p> <ol> <li>Obtenci\u00f3n de las siguientes variables el\u00e9ctricas del reconectador en funci\u00f3n del tiempo:</li> <li>Tensiones entre fase.</li> <li>Tensiones entre fase y tierra.</li> <li>Corrientes de fase a, b y c.</li> <li>Potencia activa, reactiva y aparente de cada fase y total.</li> <li>Factor de potencia de cada fase y total.</li> <li>Frecuencia.</li> <li>Registro de las variables con una periodicidad de 15 minutos.</li> <li>Registro de cada evento ocurrido seg\u00fan el manual de usuario.</li> <li>Provisi\u00f3n de una interfaz web accesible desde dentro de la red de la Universidad, a trav\u00e9s de la cual los usuarios podr\u00e1n consultar los requerimientos 1) y 3).</li> <li>Exportaci\u00f3n de los datos registrados en formato CSV, con el fin de que el cliente pueda analizarlos de forma independiente.</li> <li>La interfaz deber\u00e1 incluir un filtro para seleccionar un rango de fechas, de modo que se puedan exportar \u00fanicamente los datos correspondientes al per\u00edodo deseado.</li> </ol>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#4-requerimientos-no-funcionales","title":"4. Requerimientos no funcionales","text":"<ol> <li>Disponibilidad del sistema en todo momento, mediante su despliegue en un servidor de disponibilidad permanente, accesible a trav\u00e9s de un dominio web registrado y operativo.</li> <li>Implementaci\u00f3n de un sistema de registro de usuarios y autenticaci\u00f3n, permitiendo el acceso \u00fanicamente a personas autorizadas.</li> </ol>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#5-requerimientos-deseables","title":"5. Requerimientos deseables","text":"<p>Adem\u00e1s de los requerimientos fundamentales, el cliente manifest\u00f3 inter\u00e9s en que el sistema cuente con las siguientes caracter\u00edsticas deseables:</p> <ol> <li>Env\u00edo de alertas por correo electr\u00f3nico ante eventos importantes.</li> <li>Autenticaci\u00f3n por doble factor: registro de nuevos usuarios solicitando la confirmaci\u00f3n de la direcci\u00f3n de correo electr\u00f3nico.</li> <li>Conservaci\u00f3n de los datos registrados durante un per\u00edodo m\u00ednimo de un (1) a\u00f1o, permitiendo su consulta y exportaci\u00f3n dentro de ese intervalo temporal.</li> </ol>"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#6-definicion-de-datos","title":"6. Definici\u00f3n de datos","text":"Dato Abreviatura Tipo Unidad Resoluci\u00f3n C\u00f3digo Corriente fase A Ia Entero Ampere 1 A 30001 Corriente fase B Ib Entero Ampere 1 A 30002 Corriente fase C Ic Entero Ampere 1 A 30003 Tensi\u00f3n fase A - neutro Ua Entero Volt 1 V 30005 Tensi\u00f3n fase B - neutro Ub Entero Volt 1 V 30006 Tensi\u00f3n fase C - neutro Uc Entero Volt 1 V 30007 Tensi\u00f3n entre R - neutro Ur Entero Volt 1 V 30008 Tensi\u00f3n entre S - neutro Us Entero Volt 1 V 30009 Tensi\u00f3n entre T - neutro Ut Entero Volt 1 V 30010 Tensi\u00f3n entre l\u00edneas A y B Uab Entero Volt 1 V 30011 Tensi\u00f3n entre l\u00edneas B y C Ubc Entero Volt 1 V 30012 Tensi\u00f3n entre l\u00edneas C y A Uca Entero Volt 1 V 30013 Tensi\u00f3n L-L entre secuencias RS Urs Entero Volt 1 V 30014 Tensi\u00f3n L-L entre secuencias ST Ust Entero Volt 1 V 30015 Tensi\u00f3n L-L entre secuencias TR Utr Entero Volt 1 V 30016 Potencia aparente fase A kVA A Entero kVA 1 kVA 30017 Potencia aparente fase B kVA B Entero kVA 1 kVA 30018 Potencia aparente fase C kVA C Entero kVA 1 kVA 30019 Potencia activa fase A kW A Entero kW 1 kW 30020 Potencia activa fase B kW B Entero kW 1 kW 30021 Potencia activa fase C kW C Entero kW 1 kW 30022 Potencia reactiva fase A kVAr A Entero kVAr 1 kVAr 30023 Potencia reactiva fase B kVAr B Entero kVAr 1 kVAr 30024 Potencia reactiva fase C kVAr C Entero kVAr 1 kVAr 30025 Potencia aparente total kVA total Entero kVA 1 kVA 30026 Potencia activa total kW total Entero kW 1 kW 30027 Potencia reactiva total kVAr total Entero kVAr 1 kVAr 30028 Frecuencia Freq abc Decimal Hz Hz * 0.01 30061 Frecuencia lado RST Freq rst Decimal Hz Hz * 0.01 30062 Factor de potencia total Fp total Decimal - *0.001 30068 Factor de potencia fase A FP A Decimal - *0.001 30069 Factor de potencia fase B FP B Decimal - *0.001 30070 Factor de potencia fase C FP C Decimal - *0.001 30071"},{"location":"Especificaci%C3%B3n_de_Requerimientos/Especificaci%C3%B3n_de_Requerimientos/#7-conclusion","title":"7. Conclusi\u00f3n","text":"<p>Este documento resume los requerimientos funcionales y no funcionales identificados durante el relevamiento con el cliente. Servir\u00e1 como gu\u00eda para la etapa de dise\u00f1o e implementaci\u00f3n del sistema. Una vez validado por el cliente, se considerar\u00e1 como base contractual del proyecto.</p> <p>\u00a9 F3 2025, todos los derechos reservados.</p>"},{"location":"Manual_usuario/Manual_usuario/","title":"Manual de Usuario","text":"<p>Universidad Nacional de R\u00edo Cuarto Ingenier\u00eda en Telecomunicaciones</p> <p></p> <p>Manual de Usuario</p> <p>Sistema de monitoreo reconectador NOJA</p> <p>Fecha: Junio 2025</p> <p>Sistema de Monitoreo IPSEP / UNRC Manual de Usuario - Reconectador NOJA</p> <p></p>"},{"location":"Manual_usuario/Manual_usuario/#indice","title":"\u00cdndice","text":"<ol> <li>Introducci\u00f3n</li> <li>Acceso al sistema</li> <li>Registro de usuario</li> <li>Verificaci\u00f3n por correo</li> <li>Inicio de sesi\u00f3n</li> <li>Estructura general del sistema</li> <li>Variables disponibles</li> <li>Gu\u00eda de uso paso a paso</li> <li>Consulta de eventos registrados</li> </ol>"},{"location":"Manual_usuario/Manual_usuario/#introduccion","title":"Introducci\u00f3n","text":"<p>Este sistema fue desarrollado por estudiantes de la carrera de Ingenier\u00eda en Telecomunicaciones de la Universidad Nacional de R\u00edo Cuarto (UNRC), en colaboraci\u00f3n con el IPSEP, con el objetivo de monitorear el comportamiento de un reconectador el\u00e9ctrico marca NOJA. Permite visualizar en tiempo real tensiones, corrientes, potencias, frecuencia y eventos del sistema el\u00e9ctrico.</p>"},{"location":"Manual_usuario/Manual_usuario/#acceso-al-sistema","title":"Acceso al sistema","text":""},{"location":"Manual_usuario/Manual_usuario/#registro-de-usuario","title":"Registro de usuario","text":"<p>Desde la pantalla de inicio, el usuario debe completar los siguientes campos:</p> <ul> <li>Nombre y apellido</li> <li>Email v\u00e1lido</li> <li>Nombre de usuario</li> <li>Contrase\u00f1a (m\u00ednimo 8 caracteres, con al menos un n\u00famero y un s\u00edmbolo especial)</li> <li>Confirmaci\u00f3n de contrase\u00f1a</li> <li>Captcha de seguridad</li> </ul>"},{"location":"Manual_usuario/Manual_usuario/#verificacion-por-correo","title":"Verificaci\u00f3n por correo","text":"<p>Una vez enviado el formulario, se enviar\u00e1 un c\u00f3digo de verificaci\u00f3n al correo electr\u00f3nico ingresado. Es necesario introducir dicho c\u00f3digo para activar la cuenta.</p>"},{"location":"Manual_usuario/Manual_usuario/#inicio-de-sesion","title":"Inicio de sesi\u00f3n","text":"<p>Con la cuenta ya verificada, se puede acceder al sistema ingresando usuario y contrase\u00f1a en la misma pantalla inicial.</p>"},{"location":"Manual_usuario/Manual_usuario/#estructura-general-del-sistema","title":"Estructura general del sistema","text":"<p>El sistema est\u00e1 dividido en varios m\u00f3dulos, cada uno con una funci\u00f3n espec\u00edfica:</p> <ul> <li>Gu\u00eda de uso e informaci\u00f3n de variables: proporciona instrucciones para utilizar la plataforma y una lista detallada de todas las variables disponibles, con su descripci\u00f3n y unidades.</li> <li>Gr\u00e1fico de monitoreo en tiempo real: permite seleccionar una variable el\u00e9ctrica y visualizar su comportamiento en tiempo real con actualizaci\u00f3n autom\u00e1tica cada 15 segundos.</li> <li>Tabla de eventos registrados: muestra una lista de eventos detectados por el reconectador, como fallas, aperturas o cierres.</li> <li>Exportaci\u00f3n de datos a CSV: permite filtrar variables por fecha y tipo, y exportar los resultados para su an\u00e1lisis externo o resguardo.</li> </ul>"},{"location":"Manual_usuario/Manual_usuario/#variables-disponibles","title":"Variables disponibles","text":"<p>Tensiones (V): - Ua, Ub, Uc: tensiones de cada fase - Uab, Ubc, Uca: tensiones entre l\u00edneas - Urs, Ust, Utr: tensiones de referencia</p> <p>Corrientes (A): - Ia, Ib, Ic: corriente por fase</p> <p>Potencias: - KVA: Potencia aparente - KW: Potencia activa - KVAR: Potencia reactiva - Por fase y total</p> <p>Frecuencia y Factor de Potencia: - Frecuencia ABC y RST - FP: por fase y total</p>"},{"location":"Manual_usuario/Manual_usuario/#guia-de-uso-paso-a-paso","title":"Gu\u00eda de uso paso a paso","text":""},{"location":"Manual_usuario/Manual_usuario/#importar-datos","title":"Importar datos","text":"<p>Use el bot\u00f3n correspondiente para cargar archivos CSV o Excel.</p>"},{"location":"Manual_usuario/Manual_usuario/#filtrar-por-fecha-y-hora","title":"Filtrar por fecha y hora","text":"<p>Seleccione un rango de fechas y horas para limitar los datos visualizados o exportados.</p>"},{"location":"Manual_usuario/Manual_usuario/#filtrar-por-tipo-de-variable","title":"Filtrar por tipo de variable","text":"<p>Elija entre tensiones, corrientes, potencias, etc., desde el selector correspondiente.</p>"},{"location":"Manual_usuario/Manual_usuario/#visualizacion-de-graficos","title":"Visualizaci\u00f3n de gr\u00e1ficos","text":"<ul> <li>Seleccione categor\u00eda y variable espec\u00edfica.</li> <li>El gr\u00e1fico se actualiza autom\u00e1ticamente cada 15 segundos.</li> <li>Se puede cambiar el intervalo temporal o pausar la actualizaci\u00f3n.</li> <li>Se muestran valores actuales, m\u00e1ximos, m\u00ednimos y promedio.</li> </ul>"},{"location":"Manual_usuario/Manual_usuario/#exportacion-de-datos","title":"Exportaci\u00f3n de datos","text":"<ul> <li>Filtre por fecha, hora y variable espec\u00edfica.</li> <li>Presione el bot\u00f3n Exportar CSV para descargar los datos filtrados.</li> <li>El archivo incluir\u00e1 la fecha y hora como nombre de archivo.</li> </ul>"},{"location":"Manual_usuario/Manual_usuario/#consulta-de-eventos-registrados","title":"Consulta de eventos registrados","text":"<p>Permite visualizar eventos detectados por el reconectador, filtrando por fechas. \u00datil para diagn\u00f3sticos y auditor\u00edas.</p>"}]}